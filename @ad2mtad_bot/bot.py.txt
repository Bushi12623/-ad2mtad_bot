from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
import requests
import os

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
API_TOKEN = os.getenv('API_TOKEN', '7659700634:AAFtANhu0ZzkxF8AFxGEkj2Z3BERJJaP-jk')

# API-–∫–ª—é—á –∞–¥–º–∏—Ç–∞–¥
ADMITAD_API_KEY = os.getenv('ADMITAD_API_KEY', 'D0Rdl5KleAzUvS5F4OLgalmrt2o1mc')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! üëã –Ø ‚Äî –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –≤—ã–≥–æ–¥–Ω—ã–º –ø–æ–∫—É–ø–∫–∞–º –Ω–∞ AliExpress. üõçÔ∏è\n\n"
        "–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞—Ö–æ–¥–∏—Ç—å –ª—É—á—à–∏–µ —Ç–æ–≤–∞—Ä—ã –ø–æ –æ—Ç–ª–∏—á–Ω—ã–º —Ü–µ–Ω–∞–º.\n\n"
        "üîç –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫, –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n"
        "- –ß–µ—Ö–æ–ª –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n"
        "- –ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏\n"
        "- –ü–ª–∞—Ç—å–µ –ª–µ—Ç–Ω–µ–µ\n\n"
        "–Ø –ø–æ–∫–∞–∂—É –≤–∞–º –ø–æ–¥–±–æ—Ä–∫—É —Ç–æ–≤–∞—Ä–æ–≤, –∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –∫—É–ø–∏—Ç—å –∏—Ö –Ω–∞ AliExpress. üõí"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
@dp.message_handler()
async def search_products_handler(message: types.Message):
    query = message.text
    products = search_products(query)
    if products:
        for product in products:
            name = product['name']
            price = product['price']
            image_url = product['image_url']
            affiliate_link = product['affiliate_link']
            description = product.get('description', '–û—Ç–ª–∏—á–Ω—ã–π —Ç–æ–≤–∞—Ä –ø–æ –≤—ã–≥–æ–¥–Ω–æ–π —Ü–µ–Ω–µ!')

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–æ–≤–∞—Ä–æ–º
            caption = (
                "üéâ <b>–ù–∞–π–¥–µ–Ω —Ç–æ–≤–∞—Ä –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É!</b>\n\n"
                f"üîπ <b>–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:</b> {name}\n"
                f"üîπ <b>–¶–µ–Ω–∞:</b> {price} ‚ÇΩ\n"
                f"üîπ <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {description}\n\n"
                f"<a href='{affiliate_link}'>üõí –ö—É–ø–∏—Ç—å –Ω–∞ AliExpress</a>"
            )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await message.answer_photo(
                photo=image_url,
                caption=caption,
                parse_mode="HTML"
            )
    else:
        await message.answer("üòî –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å, –Ω–∞–ø—Ä–∏–º–µ—Ä: '—á–µ—Ö–æ–ª –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞'.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ API –∞–¥–º–∏—Ç–∞–¥
def search_products(query):
    url = "https://api.admitad.com/products/search/"
    headers = {
        "Authorization": f"Bearer {ADMITAD_API_KEY}"
    }
    params = {
        "q": query,  # –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        "limit": 10  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö
    }
    response = requests.get(url, headers=headers, params=params)
    if response.status_code == 200:
        return response.json()['results']
    return None

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)